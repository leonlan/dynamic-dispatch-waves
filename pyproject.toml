[tool.poetry]
name = "ddwp"
version = "0.1.0"
description = "Code for dynamic dispatch waves problem"
authors = [
    "Leon Lan <l.lan@vu.nl>",
    "Jasper van Doorn <j.m.h.van.doorn@vu.nl>",
    "Niels Wouda <n.a.wouda@rug.nl>",
]
license = "MIT"
readme = "README.md"
packages = [{include ="ddwp"}, {include = "benchmark.py"}]


[tool.poetry.dependencies]
python = "^3.9, <4.0"
numpy = "^1.22.2"
matplotlib = "^3.5.1"
tomli = "^2.0.1"
tqdm = "^4.64.0"
vrplib = "^1.0.1"
pyvrp = { git = "https://github.com/leonlan/dynamic-dispatch-waves.git", branch = "pyvrp" }


[tool.poetry.group.dev.dependencies]
black = "^22.6.0"
pre-commit = "^3.3.3"


[tool.poetry.group.tune]
optional = true

[tool.poetry.group.tune.dependencies]
tomli-w = "^1.0.0"
scipy = "^1.9.2"


[tool.poetry.scripts]
benchmark = "benchmark:main"


[tool.black]
line-length = 79


[tool.mypy]
ignore_missing_imports = true
plugins = ['numpy.typing.mypy_plugin']


[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
]
ignore = [
    "E501",  # line too long, handled by black
    "C901",  # too complex
    "E741",  # ambiguous variable name
]
extend-exclude = ["tune"]


[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
